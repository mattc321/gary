<?php
Use Drupal\image\Entity\ImageStyle;
use Drupal\user\Entity\User;
use Drupal\Core\Render\Markup;
use Drupal\gary_custom\GaryFunctions;

/**
 * Implements template_preprocess_block().
 */
 function gary_preprocess_block__gary_account_menu(&$vars) {
   if ($user = User::load(\Drupal::currentUser()->id())) {
     //pass username
     $username = ucfirst($user->getAccountName());
     $vars['username'] = ($username == '') ? 'Admin' : $username;
     //pass user img
     if (!$user->user_picture->isEmpty()) {
       $file_uri = $user->get('user_picture')->entity->getFileUri();
       $styled_image_url = ImageStyle::load("user_pic")->buildUrl($file_uri);
       $picture = $styled_image_url;
     } else {
       $field = \Drupal\field\Entity\FieldConfig::loadByName('user', 'user', 'user_picture');
       $default_image = $field->getSetting('default_image');
       $file = \Drupal::entityManager()->loadEntityByUuid('file', $default_image['uuid']);
       $file_uri = $file->getFileUri();
       $styled_image_url = ImageStyle::load("user_pic")->buildUrl($file_uri);
       $picture = $styled_image_url;
     }
     $vars['user_pic'] = $picture;
     $vars['#cache']['contexts'][] = 'user';

   }
 }

function gary_preprocess_field(&$variables, $hook) {
  $element = $variables['element'];
  if ($element['#field_name'] == 'field_address' && $element['#view_mode'] == 'full') {
    if (isset($element['#object'])) {
      $entity = $element['#object'];
      if ($entity->bundle() == 'projects') {
        //display address field as link to google maps
        $ad = $entity->field_address->value;
        $city = $entity->field_city->value;
        $st = $entity->field_state->value;
        $zip = $entity->field_zip->value;
        $lat = $entity->field_geolocation->lat;
        $lng = $entity->field_geolocation->lng;
        $google_search = '<a title="Open In Google Maps" href="https://www.google.com/maps/place/'.$ad.','.$city.','.$st.','.$zip.'">'.$ad.'</a>';
        $proximity_search_url = '/project-map/'.$lat.'/'.$lng.'/17';
        $variables['google_search'] = Markup::create($google_search);
        $variables['proximity_search_url'] = $proximity_search_url;
      }
    }
  }
}

function gary_preprocess_html(&$variables) {
  //send the color schema over to the body class
  if ($user = User::load(\Drupal::currentUser()->id())) {
    if (!$user->hasField('field_color')) {
      $color = 'light';
    } else {
      $color = !empty($user->field_color->value) ? $user->field_color->value : 'light';
    }
  }
  $variables['color'] = $color;
}

function gary_preprocess_page(&$variables) {

  //site name and logo vars
  $variables['site_name'] = \Drupal::config('system.site')->get('name');
  $variables['logo'] = theme_get_setting('logo.url');

  //send node_type over helps with form page classes
  if ($node_type = \Drupal::routeMatch()->getParameter('node_type')) {
    $variables['node_type'] = $node_type->id();
  }

  //prepare specific bundle lables in the header
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $bundle_label = \Drupal::entityTypeManager()
      ->getStorage('node_type')
      ->load($node->bundle());

    $bundles = [
              'projects',
              'opportunities',
              'accounts',
              'contacts',
              'tasks',
              'sub_contractor'
    ];

    if (in_array(strtolower($bundle_label->id()), $bundles)) {
      $variables['bundle_id'] = $bundle_label->id();
      $variables['bundle'] = $bundle_label->label();
      //pass modified by and date
      $variables['created'] = $variables['node']->getCreatedTime();
      $variables['last_updated_by'] = $variables['node']->getRevisionUser()->getAccountName();
      $variables['last_updated_date'] = $variables['node']->getChangedTime();
    }



  }
}

function gary_preprocess_links__node(&$variables) {
  //unset core add comment link
  unset($variables['links']['comment-add']);
}

function gary_preprocess_page_title(&$variables) {

  // Load the node entity from current route
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    //send account ref title to page title
    if ($node->hasField('field_account_reference') && !$node->get('field_account_reference')->isEmpty()) {
      $entity_id = $node->get('field_account_reference')->first()->getValue()['target_id'];
      $entity = \Drupal\node\Entity\Node::load($entity_id);
      if (empty($entity)) {
        return;
      }
      $entity = $entity->toArray();
      $account_title = $entity['title'][0]['value'];
      $variables['account_title'] = $account_title;
    }
  }
}

function gary_preprocess_comment(&$variables) {
  //change the view mode of user_picture
  $variables['user_picture']['#view_mode'] = 'ultra_compact';

  //change submitted format and output
  $date = date('D, m-d-Y', $variables['comment']->getCreatedTime());
  $author = $variables['comment']->getAuthorName();
  $submitted = [
    '#theme' => 'rdf_wrapper',
    '#content' => t('Submitted by @author on @cdate', [
      '@author' => $author,
      '@cdate' => $date,
    ])
  ];
  $variables['ec_submitted'][] = $submitted;



}

function gary_preprocess_views_view_unformatted__project_units__block_4(&$variables) {
  $view = $variables['view'];
  $rows = $variables['rows'];
  foreach ($rows as $id => $row) {
    $entity = $row['content']['#row']->_entity;
    $summary_string = '';
    $desc = '';
    if ($entity->hasField('field_unit_types') && !$entity->get('field_unit_types')->isEmpty()) {
      $term_name = GaryFunctions::loadEntityRef($entity, 'field_unit_types')->getName();
      $summary_string .= $term_name;
    }
    if (!empty($entity->field_unit->value)) {
      $unit_name = $entity->field_unit->value;
    } else {
      $unit_name = 'Unnamed';
    }
    if (!empty($entity->field_description->value)) {
      $desc = $entity->field_description->value;
    }
    if (!empty($entity->field_beds->value)) {
      $beds = $entity->field_beds->value;
      $summary_string .= ((!empty($summary_string)) ? ', ' : '') . $beds . ' beds';
    }
    $variables['rows'][$id]['description'] = 'Desc: ' . $desc;
    $variables['rows'][$id]['summary'] = $summary_string;
    $variables['rows'][$id]['unit_name'] = $unit_name;
  }
}

function gary_preprocess_form_element(&$variables) {
  // $element = $variables['element'];
  // if ($element['#type'] == 'search') {
  //   $element['#wrapper_attributes']['class'] = ['visually-hidden'];
  //   ksm($element);
  // }
}
