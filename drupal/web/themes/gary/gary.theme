<?php
Use Drupal\image\Entity\ImageStyle;

/**
 * Implements template_preprocess_block().
 */
function gary_preprocess_block(&$variables) {

  if ($user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id())) {
    //pass username
    $username = ucfirst($user->getAccountName());
    $variables['username'] = ($username == '') ? 'Admin' : $username;
    //pass user img
    if (!$user->user_picture->isEmpty()) {
      $file_uri = $user->get('user_picture')->entity->getFileUri();
      $styled_image_url = ImageStyle::load("user_pic")->buildUrl($file_uri);
      $picture = $styled_image_url;
    } else {
      $field = \Drupal\field\Entity\FieldConfig::loadByName('user', 'user', 'user_picture');
      $default_image = $field->getSetting('default_image');
      $file = \Drupal::entityManager()->loadEntityByUuid('file', $default_image['uuid']);
      $file_uri = $file->getFileUri();
      $styled_image_url = ImageStyle::load("user_pic")->buildUrl($file_uri);
      $picture = $styled_image_url;
    }
    $variables['user_pic'] = $picture;
  }


}

function gary_preprocess_datetime_form(&$variables) {
  // $element = $variables['element'];
  // ksm($variables);
  // ksm($variables['element']);
  // dpm(1);
  // ksm($variables['#parents']['']);
}

function gary_preprocess_form_element_label(&$variables) {
  // $element = $variables['element'];
  // $id = $variables['element']['#id'];
  // if (strpos($id, 'date') !== false) {
  //   ksm($variables);
  //   $variables['title']=NULL;
  // }
  // ksm($variables['element']['#id']);
}

function gary_preprocess_field(&$variables, $hook) {
  // ksm($variables);
}

function gary_preprocess_node(&$variables) {

}

function gary_preprocess_page(&$variables) {
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $bundle_label = \Drupal::entityTypeManager()
      ->getStorage('node_type')
      ->load($node->bundle())
      ->label();

    $bundles = [
              'projects',
              'opportunities',
              'accounts',
              'contacts',
              'tasks'
    ];

    if (in_array(strtolower($bundle_label), $bundles)) {
      $variables['bundle'] = $bundle_label;
      //pass modified by and date
      $variables['created'] = $variables['node']->getCreatedTime();
      $variables['last_updated_by'] = $variables['node']->getRevisionUser()->getAccountName();
      $variables['last_updated_date'] = $variables['node']->getChangedTime();
    }



  }
}

function gary_preprocess_links__node(&$variables) {
  //unset core add comment link
  unset($variables['links']['comment-add']);
}

function gary_preprocess_page_title(&$variables) {

  // Load the node entity from current route
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    //send account ref title to page title
    if ($node->hasField('field_account_reference') && !$node->get('field_account_reference')->isEmpty()) {
      $entity_id = $node->get('field_account_reference')->first()->getValue()['target_id'];
      $entity = \Drupal\node\Entity\Node::load($entity_id)->toArray();
      $account_title = $entity['title'][0]['value'];
      $variables['account_title'] = $account_title;
    }
  }
}

function gary_preprocess_comment(&$variables) {
  //change the view mode of user_picture
  $variables['user_picture']['#view_mode'] = 'ultra_compact';

  //change submitted format and output
  $date = date('D, m-d-Y', $variables['comment']->getCreatedTime());
  $author = $variables['comment']->getAuthorName();
  $submitted = [
    '#theme' => 'rdf_wrapper',
    '#content' => t('Submitted by @author on @cdate', [
      '@author' => $author,
      '@cdate' => $date,
    ])
  ];
  $variables['ec_submitted'][] = $submitted;



}

function gary_preprocess_form_element(&$variables) {
  // $element = $variables['element'];
  // if ($element['#type'] == 'search') {
  //   $element['#wrapper_attributes']['class'] = ['visually-hidden'];
  //   ksm($element);
  // }
}
