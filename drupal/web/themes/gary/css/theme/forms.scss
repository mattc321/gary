@import "../variables";

input[type=text],
input[type=password],
input[type=number],
input[type=date],
input[type=email],
select,
textarea {
  padding: 5px;
  border: 1px solid $light-grey;
  border-radius: 4px;
  resize: vertical;
  // width: 100%;
  // max-width: 300px;
}
input[type=search] {
  padding: 12px;
  border: 1px solid $light-grey;
  border-radius: 4px;
  resize: vertical;
}
label {
    padding: 12px 12px 12px 0;
    display: block;
}

input[type=submit] {
    background-color: $green;
    color: white;
    padding: 12px 20px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    transition: .3s;
}

input[type=submit]:hover {
    background-color: $dark-green;
}

//user login form
.user-login-container{
  opacity:0; //gsap fade in forms.js
}
.user-login-center {
    margin: 10vh auto;
    height: 45vh;
    border: 1px solid $light-grey;
    padding: 10px;
    border-radius: 5px;
    box-shadow: 2px 2px 2px $light-grey;
}

.user-login-logo {
  margin-top: 50px;
}

//inline forms
.inline-pg-form {
    display: flex;
    flex-flow: row wrap;
    align-items: center;

    input[type=text],
    input[type=number],
    input[type=date] {
      vertical-align: middle;
      margin: 5px 10px 5px 0;
      width: 120px;
      height: 20px;
    }
    input[type=date] {
      width: 160px;
    }
    input[type=submit] {
      margin: 45px 0 0 0;
      padding: 5px 10px;
      font-weight: bold;
    }
    .field--name-revision-log {
      display: none;
    }
}

//stupid date label output is garbage
h4.label {
    font-weight: normal;
    position: relative;
    top: -13px;
}
div#edit-field-task-due-date-wrapper {
    margin-top: 23px;
}



//add item button
input[type=submit].add-pg-item {
    margin-top: 5px;
    padding: 5px 15px;
}


//management and views forms styles
.view-manage-service-tasks {

  .tabledrag-toggle-weight-wrapper {
    display: none;
  }

  input#edit-actions-submit,
  input#edit-save-order {
    position: fixed;
    top: 40%;
    left: -10px;
    transition: .3s;
    box-shadow: 0 3px 8px 2px rgba(0, 0, 0, 0.52);

    &:hover {
      left: -5px;
    }
  }
}
$color: $blue;
//jelly button
.jelly-button {

  position: relative;
  height: 48px;
  width: 48px;
  // margin: auto;
  border-radius: 100%;
  background: $green;
  cursor: pointer;
  overflow: hidden;
  transition: all .2s ease;

  &:after {
    content: "";
    position: relative;
    display: block;
    width: 200%;
    height: 100%;
    background-image: linear-gradient(100deg, rgba(white,0), rgba(white,.25),rgba(white,0));
    transform: translateX(-100%);
  }

  svg {
    stroke-width: 2;
    stroke-linecap: round;
    stroke-linejoin: round;
    fill: none;
    
    &#border {
      position: absolute;
      top: 0;
      left: 0;
      stroke: none;
      stroke-dasharray: 144;
      stroke-dashoffset: 144;
      transition: all .2s linear;
    }

    &#arrow {
      position: absolute;
      top: 14px;
      left: 17px;
      stroke: $light;
      transition: all .2s ease;
    }

    &#plus {
      position: absolute;
      top: 14px;
      left: 17px;
      stroke: $light;
      transition: all .2s ease;
    }
    &#check {
      position: absolute;
      top: 17px;
      left: 13px;
      stroke: white;
      transform: scale(0);
    }

  }

  &:hover {
    background: rgba($color,.2);
    #arrow
      path,
      polyline {
        stroke: $color;
      }
  }

  &.load {
    background: rgba($color,.2);
    #arrow
      path,
      polyline {
        stroke: $color;
      }
    #border {
      stroke: $color;
      stroke-dasharray: 144;
      stroke-dashoffset: 0;
    }
  }

  &.done {
    background: $color;
    animation: rubberBand .8s;

    &:after {
      transform: translateX(50%);
      transition: transform .4s ease;
      transition-delay: .7s;
    }

    #border,
    #arrow {
      display: none;

    }
    #check {
      transform: scale(1);
      transition: all .2s ease;
      transition-delay: .2s;
    }
  }

}


@keyframes rubberBand {
  from {
    transform: scale(1, 1, 1);

  }
  30% {
    transform: scale3d(1.15, 0.75, 1);

  }
  40% {
    transform: scale3d(0.75, 1.15, 1);

  }
  50% {
    transform: scale3d(1.10, 0.85, 1);

  }
  65% {
    transform: scale3d(.95, 1.05, 1);

  }
  75% {
    transform: scale3d(1.05, .95, 1);

  }
  to {
    transform: scale3d(1, 1, 1);

  }
}
