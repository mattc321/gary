@import "../variables";

input[type=text],
input[type=password],
input[type=number],
input[type=date],
input[type=email],
select,
textarea {
  padding: 5px;
  border: 1px solid $light-grey;
  border-radius: 4px;
  @include max-width($break-medium) {
    width: 90%;
  }
}
textarea {
  resize: vertical;
}
input[type=search] {
  padding: 12px;
  border: 1px solid $light-grey;
  border-radius: 4px;
  resize: vertical;
}
label {
    padding: 12px 12px 12px 0;
    display: block;
}
.palette-dark {
  input[type=text],
  input[type=password],
  input[type=number],
  input[type=date],
  input[type=email],
  textarea,
  select {
    color: $dark-grey;
  }
  label {
    color: $light;
  }
}
input[type=submit]
 {
    background-color: $green;
    color: white;
    padding: 7px 15px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    transition: .3s;
}

input[type=submit]:hover {
    background-color: $dark-green;
}

.form--inline {
  > div {
    display: inline-block;
  }
  .form-item {
    float: unset;
  }
  .form-item,
  .form-actions {
    margin-bottom: unset;
    margin-top: unset;
  }
}

//user login form
.user-login-container{
  opacity:0; //gsap fade in forms.js
  height:100vh;
  .site-logo {
    width: 45%;
    height: 45%;
    margin: 0 auto;
    background: rgba($dark-grey, .9);
    border-radius: 50%;
  }

  input[type=text],
  input[type=password],
  input[type=number],
  input[type=date],
  input[type=email],
  select,
  textarea {
    width: 95%;
    max-width: 500px;
  }

}
.user-login-center {
    margin: 10vh auto;
    height: 400px;
    min-height: 320px;
    border: 1px solid $light-grey;
    padding: 10px;
    border-radius: 5px;
    box-shadow: 0px 0px 30px 0px rgba(0, 0, 0, .15);
    background: $light;
}

.user-login-logo {
  margin-top: 20px;
}

//node edit paragraphs subforms
table.field-multiple-table tr td .paragraphs-subform > div {
    display: inline-block;
}


//user profile form
.user-form {

  .field--name-user-picture {
    .description,
    .form-item:first-child label {
      display: none;
    }
  }

  .form-item-mail .description {
    display: none;
  }

  .image-preview {
    @include userPicCircled();
  }

  details#edit-contact,
  details#edit-timezone {
    display: none;
  }
}
.js-form-type-vertical-tabs {
  display: none;
}

//inline forms
.inline-pg-form {
    display: flex;
    flex-flow: row wrap;
    align-items: center;

    input[type=text],
    input[type=number],
    input[type=date] {
      vertical-align: middle;
      margin: 5px 10px 5px 0;
      width: 120px;
      height: 20px;
    }

    select {
      margin-right: 5px;
    }

    input[type=date] {
      width: 160px;
    }
    input[type=submit] {
      margin: 45px 0 0 0;
      padding: 5px 10px;
      font-weight: bold;
    }
    .field--name-revision-log {
      display: none;
    }

    .jelly-button {
      margin: 40px 0 0 5px;
    }

}

//stupid date label output is garbage
form h4.label {
    font-weight: normal;
    position: relative;
    // top: -13px;
}
div#edit-field-task-due-date-wrapper {
    margin-top: 23px;
}
.field--type-datetime {
  input.form-date {
    position: relative;
    // top: 12px;
  }
}



//add item button
input[type=submit].add-pg-item {
    margin-top: 5px;
    padding: 5px 15px;
}

//draggable show row weights
//save order button which gets a new build_id on refresh
.tabledrag-toggle-weight-wrapper,
div[class*="jelly-form-edit-save-order"] {
  display: none;
}

//views exposed forms
.views-exposed-form {
  padding: 0 0 10px 10px;
}
.palette-dark {
  .view-filters {
    background: $dark-grey;
  }
}

//management and views forms styles
.view-manage-service-tasks {

  input#edit-actions-submit,
  input#edit-save-order {
    position: fixed;
    top: 40%;
    left: -10px;
    transition: .3s;
    box-shadow: 0 3px 8px 2px rgba(0, 0, 0, 0.52);

    &:hover {
      left: -5px;
    }
  }
}

//jelly button
.jelly {

  position: relative;
  height: 48px;
  width: 48px;
  // margin: auto;
  border-radius: 100%;
  background: $green;
  cursor: pointer;
  overflow: hidden;
  transition: all .2s ease;

  &:after {
    content: "";
    position: relative;
    display: block;
    width: 200%;
    height: 100%;
    background-image: linear-gradient(100deg, rgba(white,0), rgba(white,.25),rgba(white,0));
    transform: translateX(-100%);
  }

  svg {
    stroke-width: 2;
    stroke-linecap: round;
    stroke-linejoin: round;
    fill: none;

    &#border {
      position: absolute;
      top: 0;
      left: 0;
      stroke: none;
      stroke-dasharray: 144;
      stroke-dashoffset: 144;
      transition: all .2s linear;
    }

    &#arrow {
      position: absolute;
      top: 14px;
      left: 17px;
      stroke: $light;
      transition: all .2s ease;
    }

    &#plus {
      position: absolute;
      top: 0;
      left: 0;
      // stroke: #000;
      fill: $light;
      transition: all .2s ease;
    }

    &#close {
      position: absolute;
      top: 0;
      left: 13px;
      // stroke: #000;
      fill: none;
      transition: all .2s ease;
    }

    &#check {
      position: absolute;
      top: 17px;
      left: 13px;
      stroke: none;
      transform: scale(0);
    }
  }
  &.jelly-check {
    svg#check {
      stroke: $light;
      transform: scale(1);
    }
  }
  &:hover {
    background: rgba($blue,.2);
    #arrow
      path,
      polyline, {
        stroke: $blue;
      }
    #plus {
      fill: $blue;
    }
  }

  &.load {
    background: rgba($blue,.2);
    #arrow
      path,
      polyline {
        stroke: $blue;
      }
    #plus {
      fill: $blue;
    }
    #check {
      // fill: $light;
      polyline {
        stroke: $light;
      }
    }
    #close {
      fill: $light;
    }
    #border {
      stroke: $blue;
      stroke-dasharray: 144;
      stroke-dashoffset: 0;
    }
  }

  &.done {
    background: $blue;
    animation: rubberBand .8s;

    &:after {
      transform: translateX(50%);
      transition: transform .4s ease;
      transition-delay: .7s;
    }

    #border,
    #arrow,
    #plus {
      display: none;

    }
    #check {
      transform: scale(1);
      transition: all .2s ease;
      transition-delay: .2s;
    }
  }

}

//node form specific changes
.node-form {
  @include max-width($break-small) {
    div#edit-actions {
      position: fixed;
      top: 47px;
      left: -3px;
    }
  }
}

.node-projects-edit-form {
  .field--name-field-tasks,
  .form-item-field-project-image-0-alt,
  .form-item-field-project-image-0-title,
  #edit-field-project-units-wrapper,
  #edit-field-sub-contractor-wrapper {
    display: none;
  }
}

.node-opportunities-edit-form,
.node-opportunities-form {
  div#edit-field-tasks-wrapper {
    display: none;
  }
}

.opportunity-service-select-2 .select2-container {
  min-width: 340px;
}

div#edit-field-opportunity-service-wrapper {
  width: 30%;
  min-width: 300px;
}
