<?php

/**
 * @file
 * Contains gary_comments.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\gary_comments\Controller\CommentTag;
use Drupal\node\Entity\Node;
use Drupal\Core\Entity\EntityInterface;
use Drupal\gary_custom\GaryFunctions;

/**
 * Implements hook_help().
 */
function gary_comments_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the gary_comments module.
    case 'help.page.gary_comments':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Comments controller for Gary') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function gary_comments_theme() {
  return [
    'gary_comments' => [
      'render element' => 'children',
    ],
  ];
}

function gary_comments_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  if ($form_id == 'comment_comment_form') {
    //change comment button value to add
    $form['actions']['submit']['#value'] = t('Add');

    //load taggable users by role assignees
    $users = GaryFunctions::loadUsersByRole('assignees');
    $user_string = "";
    foreach ($users as $key => $user) {
      $user_string .= ucfirst($user->getAccountName()) . ' ';
    }
    $msg = '<div class="comment-desc">To trigger a notification email to a team member, use @username anywhere in your comment with a space before and after.</br>';
    $msg.= 'Example: "Hi @cybil read this comment."  <span class="userlist"> Users: '.$user_string;
    $msg.= '</div>';
    //append message to the comment form
    $form['link'] = [
          '#markup' => t($msg),
          '#weight' => '2',
        ];

  }

}


/**
* Implements hook_entity_insert().
*/
function gary_comments_entity_insert(Drupal\Core\Entity\EntityInterface $entity) {


  if($entity->bundle() == 'comment') {
    //check if a user was tagged. Add message and send notification if true
    $tag_controller = new CommentTag();
    $tag_controller->CheckForTag($entity);
  }
}

/**
* Implements hook_entity_view().
*/
function gary_comments_entity_view(array &$build, \Drupal\Core\Entity\EntityInterface $entity, \Drupal\Core\Entity\Display\EntityViewDisplayInterface $display, $view_mode) {
    if($entity->bundle() == 'projects') {
    }

}

/**
* Implements hook_mail().
*/
function gary_comments_mail($key, &$message, $params) {

 $options = array(
   'langcode' => $message['langcode'],
 );
 switch ($key) {

   //prepare email for comments tagged in opps or projects
   case 'comment_project_tag':

     // $message['from'] = \Drupal::config('system.site')->get('mail');
     $message['from'] = $params['poster'];

     $message['subject'] = t('Comment Tag: @account - @title', array('@account' => $params['account_title'], '@title' => $params['node_title']));
     $message['body'][] = t('Posted by: @who', array('@who' => $params['poster_name']));
     $message['body'][] = '<br/>';
     $message['body'][] = t('Builder/Account: @account', array('@account' => $params['account_title']));
     $message['body'][] = '<br/>';
     $message['body'][] = t('@bundle: @title', array('@title' => $params['node_title'], '@bundle' => $params['bundle']));
     $message['body'][] = '<br/>';
     $message['body'][] = t('Comment: @cbod', array('@cbod' => $params['body']));
     $message['body'][] = '<br/>';

     $message['headers'] = [
      'content-type' => 'text/html',
      'MIME-Version' => '1.0',
      'reply-to' => $params['poster'],
      'Return-Path' => $params['poster'],
      'from' => $params['poster_name'].' <'.$params['poster'].'>'
     ];

     $alias = \Drupal::service('path_alias.manager')->getAliasByPath('/node/'.$params['node_id']);
     $host = \Drupal::request()->getSchemeAndHttpHost();
     $message['body'][] = t('Go here to view: @host@alias', array('@alias' => $alias, '@host' => $host));
     break;

     //prepare email for comment tags in tasks
     case 'comment_task_tag':

       $message['from'] = \Drupal::config('system.site')->get('mail');

       //Comment Tag: Account - Task Title (Project Title)
       $message['subject'] = t('Comment Tag: @account - @task_title (@parent_title)', array(
          '@account' => $params['account_title'],
          '@task_title' => $params['node_title'],
          '@parent_title' => $params['parent_title']));

       $message['body'][] = t('Posted by: @who', array('@who' => $params['poster_name']));
       $message['body'][] = '</br>';
       $message['body'][] = t('Builder/Account: @account', array('@account' => $params['account_title']));
       $message['body'][] = '</br>';
       $message['body'][] = t('Title/@bundle: @title (@parent_title)', array(
          '@title' => $params['node_title'],
          '@bundle' => ucfirst($params['parent_bundle']),
          '@parent_title' => $params['parent_title']));
       $message['body'][] = '</br>';
       $message['body'][] = t('Comment: @cbod', array('@cbod' => $params['body']));
       $message['body'][] = '</br>';

       $message['headers'] = [
        'content-type' => 'text/html',
        'MIME-Version' => '1.0',
        'reply-to' => $message['from'],
        'from' => 'Admin <'.$message['from'].'>'
       ];

       $alias = \Drupal::service('path_alias.manager')->getAliasByPath('/node/'.$params['node_id']);
       $host = \Drupal::request()->getSchemeAndHttpHost();
       $message['body'][] = t('Go here to view: @host@alias', array('@alias' => $alias, '@host' => $host));
       break;
 }
}

function gary_comments_page_attachments(array &$page) {
  if (\Drupal::currentUser()->isAuthenticated()) {
    $page['#attached']['library'][] = 'gary_comments/gary_comments';
  }
}
